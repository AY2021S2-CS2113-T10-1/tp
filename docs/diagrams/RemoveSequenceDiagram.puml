@startuml
'https://plantuml.com/sequence-diagram
!include style.puml

participant ":RemoveCommand" as RemoveCommand
participant "fridge:Fridge" as Fridge
participant ":Food" as Food
participant ":Exception" as Exception

-> RemoveCommand: execute()
activate RemoveCommand

RemoveCommand -> RemoveCommand: findFoodByName(foodNameToEdit: String)
activate RemoveCommand

loop food in fridge
    RemoveCommand -> Fridge: getFood()
    activate Fridge
    opt equals foodNameToEdit
        Fridge -> Food: getFoodName()
        activate Food
        return food
    end
    return food
end

deactivate RemoveCommand

alt newQuantity > 0
    RemoveCommand -> RemoveCommand: removePortion()
    activate RemoveCommand
    RemoveCommand -> Fridge: getFood()
    activate Fridge
    Fridge -> Food: setQuantity()
    activate Food
    return
    return
    deactivate Fridge
else newQuantity == 0
    RemoveCommand -> Fridge: remove()
    activate Fridge
    return
    deactivate Fridge
else exception
    RemoveCommand -> Exception: throw
    activate Exception
    return
end

deactivate RemoveCommand
destroy Food
destroy Fridge
destroy Exception

<-- RemoveCommand: result
deactivate RemoveCommand

@enduml